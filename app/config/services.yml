# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    default_locale:            "%locale%"
    adapter_cache_dir:         "%kernel.root_dir%/cache/%kernel.environment%/filesystem"
    adapter_tmp_files:         "%kernel.root_dir%/../var/TempFiles"
    adapter_files:             "%kernel.root_dir%/../var/Files"
    mail_from:                 "system@acf-expert.tn"
    mail_from_name:            "acf-expert.tn"
    mailtos:
        - { name: 'Faiez Fakhfakh', email: 'faiez.fakhfakh@acf-expert.tn' }

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
    Twig_Extensions_Extension_Text:
       class: Twig_Extensions_Extension_Text
       tags:
           - { name: twig.extension }

    Twig_Extensions_Extension_Intl:
       class: Twig_Extensions_Extension_Intl
       tags:
           - { name: twig.extension }

    Twig_Extensions_Extension_I18n:
       class: Twig_Extensions_Extension_I18n
       tags:
           - { name: twig.extension }

    Twig_Extensions_Extension_Array:
       class: Twig_Extensions_Extension_Array
       tags:
           - { name: twig.extension }

#    Symfony\Bridge\Twig\Extension\WebLinkExtension:
#        arguments: ["@request_stack"]

#    get_set_method_normalizer:
#        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
#        tags:
#            - { name: serializer.normalizer }

    Symfony\Component\Validator\Mapping\Cache\DoctrineCache:
        arguments:
            - '@doctrine_cache.providers.vendor_filesystem_validation_cache'
    # ...
    mongo_client:
        class: MongoDB\Client
        # if using a username and password
        arguments:
            - 'mongodb://%mongodb_host%:%mongodb_port%'
            - { username: "%mongodb_user%", password: "%mongodb_pass%", db: "%mongodb_auth%"}

    Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler: 
        arguments: 
            - '@mongo_client' 
            - '%mongo.session.options%'


