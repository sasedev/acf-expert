<?php
namespace Acf\DataBundle\Repository;

use Acf\DataBundle\Entity\Company;
use Acf\DataBundle\Entity\LiasseFolder;
use Doctrine\ORM\EntityRepository;

/**
 * LiasseFolderRepository
 * This class was generated by the Doctrine ORM.
 * Add your own custom
 * repository methods below.
 */
class LiasseFolderRepository extends EntityRepository
{

    /**
     * All count
     *
     * @param null|Company $c
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function countRoots(Company $c = null)
    {
        if (null == $c) {
            $qb = $this->createQueryBuilder('lf')->select('count(lf)')->where('lf.parent is NULL');
            $query = $qb->getQuery();
        } else {
            $qb = $this->createQueryBuilder('lf')->select('count(lf)')->join('lf.company', 'c')->where('lf.parent is NULL')->andWhere('c.id = :id')->setParameter('id', $c->getId());
            $query = $qb->getQuery();
        }

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @param null|Company $c
     *
     * @return \Doctrine\ORM\Query
     */
    public function getRootsQuery(Company $c = null)
    {
        if (null == $c) {
            $qb = $this->createQueryBuilder('lf')->where('lf.parent is NULL')->orderBy('lf.title', 'ASC');
        } else {
            $qb = $this->createQueryBuilder('lf')->join('lf.company', 'c')->where('c.id = :id')->andWhere('lf.parent is NULL')->setParameter('id', $c->getId())->orderBy('lf.title', 'ASC');
        }
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @param null|Company $c
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getRoots(Company $c = null)
    {
        return $this->getRootsQuery($c)->execute();
    }

    /**
     * All count
     *
     * @param null|Company $c
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function countAll(Company $c = null)
    {
        if (null == $c) {
            $qb = $this->createQueryBuilder('lf')->select('count(lf)');
            $query = $qb->getQuery();
        } else {
            $qb = $this->createQueryBuilder('lf')->select('count(lf)')->join('lf.company', 'c')->where('c.id = :id')->setParameter('id', $c->getId());
            $query = $qb->getQuery();
        }

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @param null|Company $c
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllQuery(Company $c = null)
    {
        if (null == $c) {
            $qb = $this->createQueryBuilder('lf')->orderBy('lf.pageUrlFull', 'ASC');
        } else {
            $qb = $this->createQueryBuilder('lf')->join('lf.company', 'c')->where('c.id = :id')->orderBy('lf.pageUrlFull', 'ASC')->setParameter('id', $c->getId());
        }
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @param null|Company $c
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAll(Company $c = null)
    {
        return $this->getAllQuery($c)->execute();
    }

    /**
     * All count
     *
     * @param LiasseFolder $dg
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function countAllChilds(LiasseFolder $dg)
    {
        $qb = $this->createQueryBuilder('lf')->select('count(lf)')->join('lf.company', 'c')->where('lf.pageUrlFull LIKE :url')->andWhere('d.id != :did')->setParameter('url', $dg->getPageUrlFull() . '%')->setParameter('did', $dg->getId());
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @param LiasseFolder $dg
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllChildsQuery(LiasseFolder $dg)
    {
        $qb = $this->createQueryBuilder('lf')->where('lf.pageUrlFull LIKE :url')->andWhere('lf.id != :did')->orderBy('lf.pageUrlFull', 'ASC')->setParameter('url', $dg->getPageUrlFull() . '%')->setParameter('did', $dg->getId());
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @param LiasseFolder $dg
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAllChilds(LiasseFolder $dg)
    {
        return $this->getAllChildsQuery($dg)->execute();
    }
}