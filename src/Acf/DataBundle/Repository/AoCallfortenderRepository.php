<?php
namespace Acf\DataBundle\Repository;

use Acf\DataBundle\Entity\AoCateg;
use Acf\DataBundle\Entity\AoSubCateg;
use Doctrine\ORM\EntityRepository;
use Acf\DataBundle\Entity\AoCallfortender;

/**
 * AoCallfortenderRepository
 * This class was generated by the Doctrine ORM.
 * Add your own custom
 * repository methods below.
 */
class AoCallfortenderRepository extends EntityRepository
{

    /**
     * Get Query for All Entities
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllQuery()
    {
        $qb = $this->createQueryBuilder('a')->orderBy('a.dtPublication', 'DESC');
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAll()
    {
        return $this->getAllQuery()->execute();
    }

    /**
     * Get Query for All Entities
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllFrontQuery()
    {
        $qb = $this->createQueryBuilder('a')
            ->where('a.status = :status')
            ->setParameter('status', AoCallfortender::STATUS_SHOW)
            ->orderBy('a.dtPublication', 'DESC');
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAllFront()
    {
        return $this->getAllFrontQuery()->execute();
    }

    /**
     * Get Query for All Entities
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllFrontByCategQuery(AoCateg $categ)
    {
        $qb = $this->createQueryBuilder('a')
            ->join('a.grp', 'sc')
            ->join('sc.categ', 'c')
            ->where('a.status = :status')
            ->andWhere('c.id = :cid')
            ->setParameter('status', AoCallfortender::STATUS_SHOW)
            ->setParameter('cid', $categ->getId())
            ->orderBy('a.dtPublication', 'DESC');
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAllFrontByCateg(AoCateg $categ)
    {
        return $this->getAllFrontByCategQuery($categ)->execute();
    }

    /**
     * Get Query for All Entities
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllFrontByGrpQuery(AoSubCateg $grp)
    {
        $qb = $this->createQueryBuilder('a')
            ->join('a.grp', 'sc')
            ->where('a.status = :status')
            ->andWhere('sc.id = :scid')
            ->setParameter('status', AoCallfortender::STATUS_SHOW)
            ->setParameter('scid', $grp->getId())
            ->orderBy('a.dtPublication', 'DESC');
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAllFrontByGrp(AoSubCateg $grp)
    {
        return $this->getAllFrontByGrpQuery($grp)->execute();
    }

    /**
     * Get Query for All Entities
     *
     * @param AoSubCateg $grp
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllByGrpQuery(AoSubCateg $grp)
    {
        $qb = $this->createQueryBuilder('a')
            ->join('a.grp', 'sc')
            ->where('sc.id = :id')
            ->orderBy('a.dtPublication', 'DESC')
            ->setParameter('id', $grp->getId());
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @param AoSubCateg $grp
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAllByGrp(AoSubCateg $grp)
    {
        return $this->getAllByGrpQuery($grp)->execute();
    }
}

