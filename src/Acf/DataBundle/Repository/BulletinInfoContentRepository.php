<?php
namespace Acf\DataBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Acf\DataBundle\Entity\BulletinInfo;
use Acf\DataBundle\Entity\BulletinInfoTitle;

/**
 * BulletinInfoContentRepository
 * This class was generated by the Doctrine ORM.
 * Add your own custom
 * repository methods below.
 */
class BulletinInfoContentRepository extends EntityRepository
{

    /**
     * All count
     *
     * @return Ambigous <\Doctrine\ORM\mixed, mixed, multitype:,
     *         \Doctrine\DBAL\Driver\Statement, \Doctrine\Common\Cache\mixed>
     */
    public function count()
    {
        $qb = $this->createQueryBuilder('bc')->select('count(bc)');
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllQuery()
    {
        $qb = $this->createQueryBuilder('bc')
            ->join('bc.bulletinInfoTitle', 'bt')
            ->join('bt.bulletinInfo', 'bi')
            ->orderBy('bi.num', 'ASC')
            ->addOrderBy('bt.title', 'ASC')
            ->addOrderBy('bc.dtCrea', 'ASC');
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @return Ambigous <\Doctrine\ORM\mixed,
     *         \Doctrine\ORM\Internal\Hydration\mixed,
     *         \Doctrine\DBAL\Driver\Statement,
     *         \Doctrine\Common\Cache\mixed>
     */
    public function getAll()
    {
        return $this->getAllQuery()->execute();
    }

    /**
     * All count
     *
     * @param BulletinInfo $bi
     *
     * @return Ambigous <\Doctrine\ORM\mixed, mixed, multitype:,
     *         \Doctrine\DBAL\Driver\Statement, \Doctrine\Common\Cache\mixed>
     */
    public function countByBulletinInfo(BulletinInfo $bi)
    {
        $qb = $this->createQueryBuilder('bc')
            ->select('count(bc)')
            ->join('bc.bulletinInfoTitle', 'bt')
            ->join('bt.bulletinInfo', 'bi')
            ->where('bi.id = :id')
            ->setParameter('id', $bi->getId());
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @param BulletinInfo $bi
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllByBulletinInfoQuery(BulletinInfo $bi)
    {
        $qb = $this->createQueryBuilder('bc')
            ->join('bc.bulletinInfoTitle', 'bt')
            ->join('bt.bulletinInfo', 'bi')
            ->where('bi.id = :id')
            ->orderBy('bt.title', 'ASC')
            ->addOrderBy('bc.dtCrea', 'ASC')
            ->setParameter('id', $bi->getId());
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @param BulletinInfo $bi
     *
     * @return Ambigous <\Doctrine\ORM\mixed,
     *         \Doctrine\ORM\Internal\Hydration\mixed,
     *         \Doctrine\DBAL\Driver\Statement,
     *         \Doctrine\Common\Cache\mixed>
     */
    public function getAllByBulletinInfo(BulletinInfo $bi)
    {
        return $this->getAllByBulletinInfoQuery($bi)->execute();
    }

    /**
     * All count
     *
     * @param BulletinInfoTitle $bt
     *
     * @return Ambigous <\Doctrine\ORM\mixed, mixed, multitype:,
     *         \Doctrine\DBAL\Driver\Statement, \Doctrine\Common\Cache\mixed>
     */
    public function countByBulletinInfoTitle(BulletinInfoTitle $bt)
    {
        $qb = $this->createQueryBuilder('bc')
            ->select('count(bc)')
            ->join('bc.bulletinInfoTitle', 'bt')
            ->where('bt.id = :id')
            ->setParameter('id', $bt->getId());
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @param BulletinInfoTitle $bt
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllByBulletinInfoTitleQuery(BulletinInfoTitle $bt)
    {
        $qb = $this->createQueryBuilder('bc')
            ->join('bc.bulletinInfoTitle', 'bt')
            ->join('bt.bulletinInfo', 'bi')
            ->where('bt.id = :id')
            ->orderBy('bc.dtCrea', 'ASC')
            ->setParameter('id', $bt->getId());
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @param BulletinInfoTitle $bt
     *
     * @return Ambigous <\Doctrine\ORM\mixed,
     *         \Doctrine\ORM\Internal\Hydration\mixed,
     *         \Doctrine\DBAL\Driver\Statement,
     *         \Doctrine\Common\Cache\mixed>
     */
    public function getAllByBulletinInfoTitle(BulletinInfoTitle $bt)
    {
        return $this->getAllByBulletinInfoTitleQuery($bt)->execute();
    }
}
