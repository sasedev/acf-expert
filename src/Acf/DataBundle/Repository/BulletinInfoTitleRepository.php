<?php
namespace Acf\DataBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Acf\DataBundle\Entity\BulletinInfo;

/**
 * BulletinInfoTitleRepository
 * This class was generated by the Doctrine ORM.
 * Add your own custom
 * repository methods below.
 */
class BulletinInfoTitleRepository extends EntityRepository
{

    /**
     * All count
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function count()
    {
        $qb = $this->createQueryBuilder('bt')->select('count(bt)');
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllQuery()
    {
        $qb = $this->createQueryBuilder('bt')->join('bt.bulletinInfo', 'bi')->orderBy('bi.num', 'ASC')->addOrderBy('bt.title', 'ASC');
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAll()
    {
        return $this->getAllQuery()->execute();
    }

    /**
     * All count
     *
     * @param BulletinInfo $bi
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function countByBulletinInfo(BulletinInfo $bi)
    {
        $qb = $this->createQueryBuilder('bt')->select('count(bt)')->join('bt.bulletinInfo', 'bi')->where('bi.id = :id')->setParameter('id', $bi->getId());
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @param BulletinInfo $bi
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllByBulletinInfoQuery(BulletinInfo $bi)
    {
        $qb = $this->createQueryBuilder('bt')->join('bt.bulletinInfo', 'bi')->where('bi.id = :id')->orderBy('bt.title', 'ASC')->setParameter('id', $bi->getId());
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @param BulletinInfo $bi
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAllByBulletinInfo(BulletinInfo $bi)
    {
        return $this->getAllByBulletinInfoQuery($bi)->execute();
    }
}
