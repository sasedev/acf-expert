<?php
namespace Acf\DataBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Acf\DataBundle\Entity\LiasseFolder;

/**
 * LiasseDocRepository
 * This class was generated by the Doctrine ORM.
 * Add your own custom
 * repository methods below.
 */
class LiasseDocRepository extends EntityRepository
{

    /**
     * All count
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    /**
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function count()
    {
        $qb = $this->createQueryBuilder('l')->select('count(l)');
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllQuery()
    {
        $qb = $this->createQueryBuilder('l')->orderBy('l.dtCrea', 'DESC');
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAll()
    {
        return $this->getAllQuery()->execute();
    }

    /**
     * All count
     *
     * @param LiasseFolder $f
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function countByFolder(LiasseFolder $f)
    {
        $qb = $this->createQueryBuilder('l')->select('count(l)')->join('l.folder', 'f')->where('f.id = :id')->setParameter('id', $f->getId());
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @param LiasseFolder $f
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllByFolderQuery(LiasseFolder $f)
    {
        $qb = $this->createQueryBuilder('l')->join('l.folder', 'f')->where('f.id = :id')->orderBy('l.title', 'ASC')->setParameter('id', $f->getId());
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @param LiasseFolder $f
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAllByFolder(LiasseFolder $f)
    {
        return $this->getAllByFolderQuery($f)->execute();
    }
}
