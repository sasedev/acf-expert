<?php
namespace Acf\DataBundle\Repository;

use Acf\DataBundle\Entity\AoCateg;
use Doctrine\ORM\EntityRepository;

/**
 * AoSubCategRepository
 * This class was generated by the Doctrine ORM.
 * Add your own custom
 * repository methods below.
 */
class AoSubCategRepository extends EntityRepository
{

    /**
     * All count
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function count()
    {
        $qb = $this->createQueryBuilder('sc')->select('count(sc)');
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllQuery()
    {
        $qb = $this->createQueryBuilder('sc')
            ->orderBy('sc.priority', 'ASC')
            ->addOrderBy('sc.ref', 'ASC');
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAll()
    {
        return $this->getAllQuery()->execute();
    }

    /**
     * All count
     *
     * @param AoCateg $categ
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function countByCateg(AoCateg $categ)
    {
        $qb = $this->createQueryBuilder('sc')
            ->select('count(sc)')
            ->join('sc.categ', 'c')
            ->where('c.id = :id')
            ->setParameter('id', $categ->getId());
        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Get Query for All Entities
     *
     * @param AoCateg $categ
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllByCategQuery(AoCateg $categ)
    {
        $qb = $this->createQueryBuilder('sc')
            ->join('sc.categ', 'c')
            ->where('c.id = :id')
            ->orderBy('sc.priority', 'ASC')
            ->addOrderBy('sc.ref', 'ASC')
            ->setParameter('id', $categ->getId());
        $query = $qb->getQuery();

        return $query;
    }

    /**
     * Get All Entities
     *
     * @param AoCateg $categ
     *
     * @return mixed|\Doctrine\DBAL\Driver\Statement|array|NULL
     */
    public function getAllByCateg(AoCateg $categ)
    {
        return $this->getAllByCategQuery($categ)->execute();
    }
}

